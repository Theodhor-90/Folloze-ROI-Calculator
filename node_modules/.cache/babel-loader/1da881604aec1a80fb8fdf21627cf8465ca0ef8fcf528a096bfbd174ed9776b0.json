{"ast":null,"code":"import { formatToLargeNumber } from '../utils/utils';\nimport { constrainLargeNumber, getValueFromId } from './results';\nexport const calculateRevenue = questions => {\n  const first = getValueFromId(10, questions) * 2 * (getValueFromId(11, questions) / 100) * (getValueFromId(12, questions) / 100) * getValueFromId(14, questions);\n  const second = first * (getValueFromId(13, questions) / 100);\n  return {\n    group: 'revenue',\n    first: {\n      regular: '400%',\n      enhanced: '500%'\n    },\n    second: {\n      regular: `$${formatToLargeNumber(constrainLargeNumber(first))}`,\n      enhanced: `$${formatToLargeNumber(constrainLargeNumber(first * 1.25))}`\n    },\n    third: {\n      regular: `$${formatToLargeNumber(constrainLargeNumber(second))}`,\n      enhanced: `$${formatToLargeNumber(constrainLargeNumber(second * 1.25))}`\n    }\n  };\n};","map":{"version":3,"names":["formatToLargeNumber","constrainLargeNumber","getValueFromId","calculateRevenue","questions","first","second","group","regular","enhanced","third"],"sources":["/Users/theodhor/Desktop/projects/TMPDEV/Folloze/src/calculations/revenueCalc.ts"],"sourcesContent":["import { formatToLargeNumber } from '../utils/utils';\nimport { IQuestionState, IResultState } from '../views/survey/Survey';\nimport { constrainLargeNumber, getValueFromId } from './results';\n\nexport const calculateRevenue: (questions: IQuestionState[]) => IResultState = (\n  questions\n) => {\n  const first =\n    getValueFromId(10, questions) *\n    2 *\n    (getValueFromId(11, questions) / 100) *\n    (getValueFromId(12, questions) / 100) *\n    getValueFromId(14, questions);\n  const second = first * (getValueFromId(13, questions) / 100);\n\n  return {\n    group: 'revenue',\n    first: {\n      regular: '400%',\n      enhanced: '500%',\n    },\n    second: {\n      regular: `$${formatToLargeNumber(constrainLargeNumber(first))}`,\n      enhanced: `$${formatToLargeNumber(constrainLargeNumber(first * 1.25))}`,\n    },\n    third: {\n      regular: `$${formatToLargeNumber(constrainLargeNumber(second))}`,\n      enhanced: `$${formatToLargeNumber(constrainLargeNumber(second * 1.25))}`,\n    },\n  };\n};\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,gBAAgB;AAEpD,SAASC,oBAAoB,EAAEC,cAAc,QAAQ,WAAW;AAEhE,OAAO,MAAMC,gBAA+D,GAC1EC,SAAS,IACN;EACH,MAAMC,KAAK,GACTH,cAAc,CAAC,EAAE,EAAEE,SAAS,CAAC,GAC7B,CAAC,IACAF,cAAc,CAAC,EAAE,EAAEE,SAAS,CAAC,GAAG,GAAG,CAAC,IACpCF,cAAc,CAAC,EAAE,EAAEE,SAAS,CAAC,GAAG,GAAG,CAAC,GACrCF,cAAc,CAAC,EAAE,EAAEE,SAAS,CAAC;EAC/B,MAAME,MAAM,GAAGD,KAAK,IAAIH,cAAc,CAAC,EAAE,EAAEE,SAAS,CAAC,GAAG,GAAG,CAAC;EAE5D,OAAO;IACLG,KAAK,EAAE,SAAS;IAChBF,KAAK,EAAE;MACLG,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE;IACZ,CAAC;IACDH,MAAM,EAAE;MACNE,OAAO,EAAG,IAAGR,mBAAmB,CAACC,oBAAoB,CAACI,KAAK,CAAC,CAAE,EAAC;MAC/DI,QAAQ,EAAG,IAAGT,mBAAmB,CAACC,oBAAoB,CAACI,KAAK,GAAG,IAAI,CAAC,CAAE;IACxE,CAAC;IACDK,KAAK,EAAE;MACLF,OAAO,EAAG,IAAGR,mBAAmB,CAACC,oBAAoB,CAACK,MAAM,CAAC,CAAE,EAAC;MAChEG,QAAQ,EAAG,IAAGT,mBAAmB,CAACC,oBAAoB,CAACK,MAAM,GAAG,IAAI,CAAC,CAAE;IACzE;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
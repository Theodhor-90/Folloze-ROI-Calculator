{"ast":null,"code":"var _jsxFileName = \"/Users/theodhor/Desktop/projects/TMPDEV/Folloze/src/components/input/Input.tsx\";\nimport { PercentageInput } from './PercentageInput';\nimport { NumericalInput } from './NumericalInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = _ref => {\n  let {\n    inputType,\n    onChange,\n    toggleStep,\n    hasError,\n    value\n  } = _ref;\n  return inputType === 'percentage' ? /*#__PURE__*/_jsxDEV(PercentageInput, {\n    inputType: inputType,\n    onChange: onChange,\n    hasError: hasError,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(NumericalInput, {\n    inputType: inputType,\n    onChange: onChange,\n    hasError: hasError,\n    value: value,\n    toggleStep: toggleStep\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["PercentageInput","NumericalInput","jsxDEV","_jsxDEV","Input","_ref","inputType","onChange","toggleStep","hasError","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/theodhor/Desktop/projects/TMPDEV/Folloze/src/components/input/Input.tsx"],"sourcesContent":["import { FC } from 'react'\nimport { TInputType } from '../../static/questions'\nimport { PercentageInput } from './PercentageInput'\nimport { NumericalInput } from './NumericalInput'\n\nexport type TToggleStep = (direction: 'up' | 'down') => void\n\nexport interface IInputProps {\n    inputType: TInputType\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n    toggleStep?: TToggleStep\n    hasError?: boolean\n    value: number | string\n}\n\nexport const Input: FC<IInputProps> = ({\n    inputType,\n    onChange,\n    toggleStep,\n    hasError,\n    value,\n}) => {\n    return inputType === 'percentage' ? (\n        <PercentageInput\n            inputType={inputType}\n            onChange={onChange}\n            hasError={hasError}\n            value={value}\n        />\n    ) : (\n        <NumericalInput\n            inputType={inputType}\n            onChange={onChange}\n            hasError={hasError}\n            value={value}\n            toggleStep={toggleStep as TToggleStep}\n        />\n    )\n}\n"],"mappings":";AAEA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,SAASC,cAAc,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAYjD,OAAO,MAAMC,KAAsB,GAAGC,IAAA,IAMhC;EAAA,IANiC;IACnCC,SAAS;IACTC,QAAQ;IACRC,UAAU;IACVC,QAAQ;IACRC;EACJ,CAAC,GAAAL,IAAA;EACG,OAAOC,SAAS,KAAK,YAAY,gBAC7BH,OAAA,CAACH,eAAe;IACZM,SAAS,EAAEA,SAAU;IACrBC,QAAQ,EAAEA,QAAS;IACnBE,QAAQ,EAAEA,QAAS;IACnBC,KAAK,EAAEA;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf,gBAEFX,OAAA,CAACF,cAAc;IACXK,SAAS,EAAEA,SAAU;IACrBC,QAAQ,EAAEA,QAAS;IACnBE,QAAQ,EAAEA,QAAS;IACnBC,KAAK,EAAEA,KAAM;IACbF,UAAU,EAAEA;EAA0B;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAE7C;AACL,CAAC;AAAAC,EAAA,GAvBYX,KAAsB;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
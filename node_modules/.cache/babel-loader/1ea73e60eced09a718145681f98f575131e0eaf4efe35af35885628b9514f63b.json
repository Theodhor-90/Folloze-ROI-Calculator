{"ast":null,"code":"var _jsxFileName = \"/Users/theodhor/Desktop/projects/TMPDEV/Folloze/src/components/input/PercentageInput.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PercentageInput = _ref => {\n  _s();\n  let {\n    inputType,\n    onChange,\n    hasError,\n    value\n  } = _ref;\n  const calculateBackground = value => {\n    const ratio = value / 100;\n    return `linear-gradient(90deg, #7F45E1 ${32.76 * ratio}%, #226AF8 ${value}%, #ECECEC ${value}%, #ECECEC 100%)`;\n  };\n  const [gradient, setGradient] = useState(calculateBackground(value));\n  useEffect(() => {\n    setGradient(calculateBackground(value));\n  }, [value]);\n  const percentageDataList = [{\n    label: '0%',\n    value: 0\n  }, {\n    label: '25%',\n    value: 25\n  }, {\n    label: '50%',\n    value: 50\n  }, {\n    label: '75%',\n    value: 75\n  }, {\n    label: '100%',\n    value: 100\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `input d-flex ${hasError ? 'has-error' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: e => onChange(e),\n          autoFocus: true,\n          value: value.toString(),\n          step: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol\",\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fw\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"fw\",\n          type: \"range\",\n          min: 0,\n          max: 100,\n          step: 0.5,\n          onChange: e => onChange(e),\n          value: value.toString(),\n          list: 'values',\n          style: {\n            background: gradient\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n      className: \"datalist\",\n      children: percentageDataList.map((el, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: el.value,\n          label: el.label.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)]\n      }, `option-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PercentageInput, \"zLy9kMzdWSchA/zpMR9pBvPOyeg=\");\n_c = PercentageInput;\nvar _c;\n$RefreshReg$(_c, \"PercentageInput\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PercentageInput","_ref","_s","inputType","onChange","hasError","value","calculateBackground","ratio","gradient","setGradient","percentageDataList","label","children","className","type","e","autoFocus","toString","step","fileName","_jsxFileName","lineNumber","columnNumber","min","max","list","style","background","map","el","index","_c","$RefreshReg$"],"sources":["/Users/theodhor/Desktop/projects/TMPDEV/Folloze/src/components/input/PercentageInput.tsx"],"sourcesContent":["import { FC, useEffect, useState } from 'react'\nimport { TInputType } from '../../static/questions'\n\nexport type TRangeOption = {\n    value: number\n    label: number | string\n}\n\nexport interface IInputProps {\n    inputType: TInputType\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n    hasError?: boolean\n    value: number | string\n}\n\nexport const PercentageInput: FC<IInputProps> = ({\n    inputType,\n    onChange,\n    hasError,\n    value,\n}) => {\n\n    const calculateBackground = (value: number) => {\n        const ratio = value / 100\n        return `linear-gradient(90deg, #7F45E1 ${32.76 * ratio}%, #226AF8 ${value}%, #ECECEC ${value}%, #ECECEC 100%)`        \n    }\n\n    const [gradient, setGradient] = useState(calculateBackground(value as number))\n\n    useEffect(() => {\n        setGradient(calculateBackground(value as number))\n    },[value])\n\n    const percentageDataList = [\n        {\n            label: '0%',\n            value: 0,\n        },\n        {\n            label: '25%',\n            value: 25,\n        },\n        {\n            label: '50%',\n            value: 50,\n        },\n        {\n            label: '75%',\n            value: 75,\n        },\n        {\n            label: '100%',\n            value: 100,\n        },\n    ]\n    return (\n        <>\n            <div className='input-controls'>\n                <div className={`input d-flex ${hasError ? 'has-error' : ''}`}>\n                    <input\n                        type='number'\n                        onChange={(e) => onChange(e)}\n                        autoFocus\n                        value={value.toString()}\n                        step={0.5}\n                    />\n                    <div className='symbol'>%</div>\n                </div>\n            </div>\n            <div className='d-flex'>\n                <div className='fw'>\n                    <input\n                        className='fw'\n                        type='range'\n                        min={0}\n                        max={100}\n                        step={0.5}\n                        onChange={(e) => onChange(e)}\n                        value={value.toString()}\n                        list={'values'}\n                        style={{background: gradient}}\n                    />\n                </div>\n            </div>\n            <datalist className='datalist'>\n                {percentageDataList.map((el, index) => (\n                    <div className='option-wrapper' key={`option-${index}`}>\n                        <span></span>\n                        <option\n                            value={el.value}\n                            label={el.label.toString()}\n                        ></option>\n                    </div>\n                ))}\n            </datalist>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
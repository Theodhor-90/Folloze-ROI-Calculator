{"ast":null,"code":"import { calculateCosts } from './costsCalc';\nimport { calculateProductivity } from './productivityCalc';\nimport { calculateRevenue } from './revenueCalc';\nexport const calculateResults = (selectedGroups, questionsList) => {\n  const finalResults = [];\n  const groupResults = {\n    costs: [],\n    revenue: [],\n    productivity: []\n  };\n  selectedGroups.forEach(group => {\n    if (group.checked) {\n      questionsList.forEach(question => {\n        if (question.group === group.group) {\n          groupResults[group.group].push(question);\n        }\n      });\n    }\n  });\n  if (groupResults.costs.length) {\n    finalResults.push(calculateCosts(questionsList));\n  }\n  if (groupResults.revenue.length) {\n    finalResults.push(calculateRevenue(questionsList));\n  }\n  if (groupResults.productivity.length) {\n    finalResults.push(calculateProductivity(questionsList));\n  }\n  return finalResults;\n};","map":{"version":3,"names":["calculateCosts","calculateProductivity","calculateRevenue","calculateResults","selectedGroups","questionsList","finalResults","groupResults","costs","revenue","productivity","forEach","group","checked","question","push","length"],"sources":["/Users/theodhor/Desktop/projects/TMPDEV/Folloze/src/calculations/newResults.ts"],"sourcesContent":["import { TQuestionGroup } from '../static/questions';\nimport { IResultState, IQuestionState } from '../views/survey/Survey';\nimport { calculateCosts } from './costsCalc';\nimport { calculateProductivity } from './productivityCalc';\nimport { calculateRevenue } from './revenueCalc';\n\nexport const calculateResults: (\n  selectedGroups: TQuestionGroup[],\n  questionsList: IQuestionState[]\n) => IResultState[] = (selectedGroups, questionsList) => {\n  const finalResults = [] as IResultState[];\n  const groupResults = {\n    costs: [] as IQuestionState[],\n    revenue: [] as IQuestionState[],\n    productivity: [] as IQuestionState[],\n  };\n  selectedGroups.forEach((group) => {\n    if (group.checked) {\n      questionsList.forEach((question) => {\n        if (question.group === group.group) {\n          groupResults[group.group].push(question);\n        }\n      });\n    }\n  });\n  if (groupResults.costs.length) {\n    finalResults.push(calculateCosts(questionsList));\n  }\n  if (groupResults.revenue.length) {\n    finalResults.push(calculateRevenue(questionsList));\n  }\n  if (groupResults.productivity.length) {\n    finalResults.push(calculateProductivity(questionsList));\n  }\n\n  return finalResults;\n};\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,aAAa;AAC5C,SAASC,qBAAqB,QAAQ,oBAAoB;AAC1D,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,OAAO,MAAMC,gBAGM,GAAGA,CAACC,cAAc,EAAEC,aAAa,KAAK;EACvD,MAAMC,YAAY,GAAG,EAAoB;EACzC,MAAMC,YAAY,GAAG;IACnBC,KAAK,EAAE,EAAsB;IAC7BC,OAAO,EAAE,EAAsB;IAC/BC,YAAY,EAAE;EAChB,CAAC;EACDN,cAAc,CAACO,OAAO,CAAEC,KAAK,IAAK;IAChC,IAAIA,KAAK,CAACC,OAAO,EAAE;MACjBR,aAAa,CAACM,OAAO,CAAEG,QAAQ,IAAK;QAClC,IAAIA,QAAQ,CAACF,KAAK,KAAKA,KAAK,CAACA,KAAK,EAAE;UAClCL,YAAY,CAACK,KAAK,CAACA,KAAK,CAAC,CAACG,IAAI,CAACD,QAAQ,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EACF,IAAIP,YAAY,CAACC,KAAK,CAACQ,MAAM,EAAE;IAC7BV,YAAY,CAACS,IAAI,CAACf,cAAc,CAACK,aAAa,CAAC,CAAC;EAClD;EACA,IAAIE,YAAY,CAACE,OAAO,CAACO,MAAM,EAAE;IAC/BV,YAAY,CAACS,IAAI,CAACb,gBAAgB,CAACG,aAAa,CAAC,CAAC;EACpD;EACA,IAAIE,YAAY,CAACG,YAAY,CAACM,MAAM,EAAE;IACpCV,YAAY,CAACS,IAAI,CAACd,qBAAqB,CAACI,aAAa,CAAC,CAAC;EACzD;EAEA,OAAOC,YAAY;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}